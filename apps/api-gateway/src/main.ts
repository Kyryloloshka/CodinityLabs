import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { AppModule } from './app.module';
import { AppConfigService } from './config/config.service';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const configService = app.get(AppConfigService);

  // –ì–ª–æ–±–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
      transformOptions: {
        enableImplicitConversion: true,
      },
    }),
  );

  // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è CORS
  app.enableCors({
    origin: true,
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',
    credentials: true,
  });

  // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Swagger
  const config = new DocumentBuilder()
    .setTitle('API Gateway')
    .setDescription('API Gateway –¥–ª—è –º—ñ–∫—Ä–æ—Å–µ—Ä–≤—ñ—Å–Ω–æ—ó –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏')
    .setVersion('1.0')
    .addTag(
      '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ (API Gateway)',
      '–û–ø–µ—Ä–∞—Ü—ñ—ó –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ —á–µ—Ä–µ–∑ Auth Service',
    )
    .addTag('Health', '–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤—ñ—Å—ñ–≤')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
    },
    customSiteTitle: 'API Gateway Documentation',
  });

  await app.listen(configService.port);

  console.log(
    `üöÄ API Gateway is running on: http://localhost:${configService.port}`,
  );
  console.log(
    `üìö Swagger documentation: http://localhost:${configService.port}/api`,
  );
}
void bootstrap();
