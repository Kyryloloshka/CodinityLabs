services:
  # PostgreSQL database for auth service
  postgres-auth:
    image: postgres:16-alpine
    container_name: postgres-auth-dev
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - kpi-network-dev
    restart: unless-stopped

  # PostgreSQL database for assignment service
  postgres-assignment:
    image: postgres:16-alpine
    container_name: postgres-assignment-dev
    environment:
      POSTGRES_DB: assignment_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_assignment_data:/var/lib/postgresql/data
    networks:
      - kpi-network-dev
    restart: unless-stopped

  # Frontend client
  client:
    build:
      context: ./apps/client
      dockerfile: Dockerfile.dev
    container_name: client-dev
    ports:
      - "4200:4200"
    networks:
      - kpi-network-dev
    restart: unless-stopped
    volumes:
      - ./apps/client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NITRO_HOST=0.0.0.0
      - NITRO_PORT=4200
      - API_BASE_URL=http://localhost:3000
      - AUTH_SERVICE_URL=http://localhost:8100
    command: ["pnpm", "dev"]

  api-gateway:
    build:
      context: ./apps/api-gateway
      dockerfile: Dockerfile.dev
    container_name: api-gateway-dev
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - assignment-service
      - checker-service
    networks:
      - kpi-network-dev
    restart: unless-stopped
    volumes:
      - ./apps/api-gateway:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service-dev:8100
      - ASSIGNMENT_SERVICE_URL=http://assignment-service-dev:8200
      - CHECKER_SERVICE_URL=http://checker-service-dev:8300
    command: ["pnpm", "start:dev"]

  auth-service:
    build:
      context: ./apps/auth-service
      dockerfile: Dockerfile.dev
    container_name: auth-service-dev
    ports:
      - "8100:8100"
      - "5555:5555"
    depends_on:
      - postgres-auth
    networks:
      - kpi-network-dev
    restart: unless-stopped
    volumes:
      - ./apps/auth-service:/app
      - /app/node_modules
      - ./apps/auth-service/prisma:/app/prisma
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres-auth:5432/auth_db
      - PORT=8100
    command: ["pnpm", "start:dev"]

  assignment-service:
    build:
      context: ./apps/assignment-service
      dockerfile: Dockerfile.dev
    container_name: assignment-service-dev
    ports:
      - "8200:8200"
      - "5556:5556"
    depends_on:
      - postgres-assignment
    networks:
      - kpi-network-dev
    restart: unless-stopped
    volumes:
      - ./apps/assignment-service:/app
      - /app/node_modules
      - ./apps/assignment-service/prisma:/app/prisma
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres-assignment:5432/assignment_db
      - PORT=8200
    command: ["npm", "run", "start:dev"]

  checker-service:
    build:
      context: ./apps/checker-service
      dockerfile: Dockerfile.dev
    container_name: checker-service-dev
    ports:
      - "8300:8300"
    networks:
      - kpi-network-dev
    restart: unless-stopped
    volumes:
      - ./apps/checker-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=8300
    command: ["npm", "run", "start:dev"]

volumes:
  postgres_auth_data:
  postgres_assignment_data:

networks:
  kpi-network-dev:
    driver: bridge 